TO DO 


10/27/16
>>>Added "hidden" class to form elements I don't want to see right now. Remove later & show them in a better way.
>>>Figure out how to select the "Saved" option at the top in CSS without using a class or ID
>>>Figure out how to count pressing Enter as clicking "Submit" for the form
>>>>>Removed physical "Submit" button & replaced with the magnifying glass
>>>Removed the "favorites" button in the form, replaced it with link in nav

--NEWS RESULTS PAGE---


****JQUERY .DATA()****
$('.blah').data({title: 'blah', date: 'blah'});
$('.blah').click(function (){
	var foo = $(this).data();
	console.log(foo);
})

(Easy?)

(1) Limit date range to 30 days at a time? (to minimize API calls)
--Not a priority
(2) Also see if we can store the results of the API call so that an API call doesn't need to be made each time "Previous" and "Next" is clicked...or save this till using a framework?

Users should be able to...
(1) Click the link for a news story and have a preview show up in light box
(2) See the input field of the form change color if there is an error for that form field
///DONE/// (3) Have the date fields default to today's date(?)

~~~UI changes~~~
(1) Display something if no API call has been made yet.
(2) Search occurs at the top, search bar is visible and when you start typing, the date picker and "order by" pieces of the form come down (save for when using framework?)

(Harder)

Users should be able to...
///DONE//// (1) Click a star on the news story to "favorite"/save it
----This will add the news story to an object/array containing news stories, send to "database"
----Save in local storage first
///DONE/// (2) Click to their "Favorites" screen
(3) Click back to Search from Favorites

--Favorites page--

Users should be able to...
(1) View their favorited stories
(2) Save comments on the story...and tweet them?
(3) Remove comments
(4) Remove favorites
(5) Sort their favorites

~~~~~

Add parameters to "Favorites" object so that results from the API call can be pulled in.